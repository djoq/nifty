{"ast":null,"code":"var _jsxFileName = \"/home/danny/apps/sandbox/nifty/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { Component } from \"react\";\nimport { saveAs } from 'file-saver';\nimport watermark from \"watermarkjs/lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      selectedFile: null,\n      imagePreviewUrl: null,\n      selectedChain: null\n    };\n\n    this.fileChangedHandler = event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({\n          imagePreviewUrl: reader.result\n        });\n      };\n\n      reader.readAsDataURL(event.target.files[0]);\n    };\n\n    this.chainSelectedHandler = event => {\n      const upload = document.querySelector('img').src;\n      watermark(upload).image(watermark.text.lowerRight('MyPhoto', '28px serif', '#fff', 0.5)).then(function (img) {\n        var pre = document.querySelector('#text pre');\n        pre.parentNode.insertBefore(img, pre);\n      });\n    };\n\n    this.submit = () => {\n      let img = document.querySelector('img');\n      let imagePath = img.getAttribute('src');\n      saveAs(imagePath, 'my-nft.jpg');\n    };\n  }\n\n  render() {\n    let $imagePreview = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"previewText image-container\",\n      children: \"Please select an Image for Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 30\n    }, this);\n\n    if (this.state.imagePreviewUrl) {\n      $imagePreview = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.imagePreviewUrl,\n          alt: \"icon\",\n          width: \"200\",\n          download: \"my-nft.jpg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 64\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 30\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Postchain \\xA9 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Keep your NFT first articles safe from theft. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select a blockchain where you will be publishing your NFT. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.selectedChain,\n          onChange: this.chainSelectedHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BSV\",\n            children: \"Bitcoin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Ethereum\",\n            children: \"Ethereum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"avatar\",\n          className: \"btn btn-grey\",\n          onChange: this.fileChangedHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.submit,\n          className: \"btn btn-green\",\n          children: \" Download \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), $imagePreview, /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"text\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: \"TEXT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/danny/apps/sandbox/nifty/src/App.js"],"names":["logo","Component","saveAs","watermark","App","state","selectedFile","imagePreviewUrl","selectedChain","fileChangedHandler","event","setState","target","files","reader","FileReader","onloadend","result","readAsDataURL","chainSelectedHandler","upload","document","querySelector","src","image","text","lowerRight","then","img","pre","parentNode","insertBefore","submit","imagePath","getAttribute","render","$imagePreview"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {Component} from \"react\";\nimport { saveAs } from 'file-saver';\nimport watermark from \"watermarkjs/lib\";\n\n\nclass App extends Component {\n    state =  {\n        selectedFile: null,\n        imagePreviewUrl: null,\n        selectedChain: null,\n    };\n    fileChangedHandler = event => {\n        this.setState({\n            selectedFile: event.target.files[0]\n        })\n\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n            this.setState({\n                imagePreviewUrl: reader.result\n            });\n        }\n        reader.readAsDataURL(event.target.files[0])\n    }\n\n    chainSelectedHandler = event => {\n        const upload = document.querySelector('img').src;\n        watermark(upload)\n            .image(watermark.text.lowerRight('MyPhoto', '28px serif', '#fff', 0.5))\n            .then(function (img) {\n                var pre = document.querySelector('#text pre');\n                pre.parentNode.insertBefore(img, pre);\n            });\n    }\n\n    submit = () => {\n        let img = document.querySelector('img');\n        let imagePath = img.getAttribute('src');\n        saveAs(imagePath, 'my-nft.jpg');\n    }\n    render() {\n\n\n        let $imagePreview = (<div className=\"previewText image-container\">Please select an Image for Preview</div>);\n        if (this.state.imagePreviewUrl) {\n            $imagePreview = (<div className=\"image-container\" ><img src={this.state.imagePreviewUrl} alt=\"icon\" width=\"200\" download=\"my-nft.jpg\" /> </div>);\n        }\n    return (\n        <div className=\"App\">\n            <h1>Postchain © </h1>\n            <h3> Keep your NFT first articles safe from theft. </h3>\n            <div className=\"App\">\n                <label>Select a blockchain where you will be publishing your NFT. </label>\n                <select value={this.selectedChain} onChange={this.chainSelectedHandler}>\n                    <option value=\"BSV\">Bitcoin</option>\n                    <option value=\"Ethereum\">Ethereum</option>\n                </select>\n                <hr />\n                <input type=\"file\" name=\"avatar\" className={\"btn btn-grey\"} onChange={this.fileChangedHandler}/>\n                <br />\n                <button type=\"button\" onClick={this.submit} className={\"btn btn-green\"}> Download </button>\n                {$imagePreview}\n\n                <div id=\"text\">\n                    <pre>TEXT</pre>\n                </div>\n            </div>\n        </div>\n    )\n    }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}